n未満の非負整数を順にiとして
ansと、iとjの積の大きい方を新しいansとする
もしpがkの自乗と等しく、かつiとjとkの和が1000であれば
rsにchを足す
aがnで割り切れるならTrue、そうでないならFalseを返す
primesにn+1個のTrueからなるリストを代入
factsのx+1番目の要素にx番目の要素とx+1の積を代入
retを空のリストとする
ループが最後まで処理された場合
nをaで割る
yとmとdを引数とする関数euler019_names_of_the_dayを定義
sとnを引数とする関数euler013_front_n_sliceを定義
1のみからなるリストを返す
countが10001未満である間
retの先頭にnを10で割った余りを追加する
aとbを引数とする関数euler011_over_or_equalの定義
sとnを引数とする関数euler004_n_sliceの定義
s内の各要素をchとして
j以上1000未満の整数kについて
iが2であれば
slの最初の要素を削除する
sにfactの文字列表現を代入
qの各要素を前から順にchとして
retを空リストとする
sの各要素を順にchとして
nがaで割り切れる間
yが400で割り切れるか、100で割り切れずに4で割り切れる場合True、そうでない場合Falseを返す。
nを引数とする関数euler010_n_is_primeの定義
qにnの文字列表現を格納
gammaにyを100で割った整数部分の-1倍に5を足したものを代入
tpを引数とする関数euler009_is_sum_equation1000の定義
retにx+1を掛ける
現在のmと(q[i*20+j] * q[(i+1)*20+j+1] * q[(i+2)*20+j+2] * q[(i+3)*20+j+3])のうち大きい方を新しいmとする
aとbを引数とする関数euler004_multiple_aの定義
resを返す
chをsの各要素、iをその番号として
aに0を代入
qとnを引数とする関数euler013_query_n_sumを定義
もしaが0でなくて、かつaが20以下であれば
2からpの平方根までの整数iのうち、pを割り切ることができるもののリストをlに代入
aに空文字列を代入
pに空リストを代入
bに空文字列を代入
a割るpの整数部分を返す
retの末尾にnを追加する
wordのn/100番目の要素の長さをretに足す
20未満の非負整数iを小さい方から順に調べる
もしpのi番目が真であれば
countに1を足す
s以上e未満の整数を小さい方からiとして
sl内の各要素をiとして
2以上a未満の整数を順にiとして
関数euler017の定義
wordのn%10番目の要素の長さをretに足す
retを返す
retにwordのn番目の要素の長さを足す
lを引数とする関数euler010_list_sum_aの定義
x,yを引数とする関数euler011_right_pointの定義
dinominalsを0が21個並んだリストとする
nの自乗を返す
retのi+1番目にlのi番目とi+1番目の要素の和を追加する
2からn+1までの整数を順にiとして
2からnまでの各整数を順にiとして
aとnを引数とする関数euler007_n_division_aの定義
retの末尾にiを追加
flを返す
関数euler016の定義
もしlの長さが0であれば
tにsを2で割った商とs+1の組を代入
そうでなく、もしaが2であれば
plの末尾要素からxまでの数を順にiとして
tpを引数とする関数euler009_is_sum_equation1000_aの定義
a以上b未満の整数の総和を返す
もしjudgeが真でかつnがiで割り切れるなら
sumofsqにi+1の自乗を足す
nが2で割り切れる場合nを2で割った商を、そうでない場合nの3倍に1を足した数をnに代入
primesを空リストとする
もしnが1であれば
lを引数とする関数euler008_all_productの定義
bの末尾にnを追加
関数euler012の定義
aとbの積を返す
dlが空であればTrue、そうでなければFalseを返す
iの自乗がn未満の間
以下の処理をb回繰り返す
aとbを引数とする関数euler012_a_over_bの定義
iがjで割り切れるなら
aとbを引数とする関数euler002_add_paramの定義
もしnがxで割り切れるなら
l内の要素の総和を返す
qの全要素の総和を返す
もしflの長さがxより小さければ
plに2のみからなるリストを代入
wordのn%10番目を返す
lの末尾にaを追加する
aにnから2を引いた数を代入
factsの20番目の要素をi番目の要素と20-i番目の要素の積で割った結果をdinominalsのi番目に格納する
sumofsqとsqofsumの差を返す
aをxで割る
lの各要素の番号を順にiとして
aをretに掛ける
resにbとaの差を代入
lの全要素の総和を返す
pのi番目にFalseを代入
lとsとcを引数とする関数euler008_list_sliceの定義
factsのn番目の要素をr番目とn-r番目の要素の積で割った結果を返す
jに1を足す
関数euler004の定義
retの末尾要素にdを加えたものをretの末尾に追加する
plにiを追加する
iの倍からnまでの数をi個飛ばしで順にjとして
clの各要素をn、iを番号として繰り返し
retにwordのa%10番目の要素の長さを足す
sにdを足す
lに含まれる各要素をxに代入して繰り返し
sを引数とする関数euler011_string_space_splitの定義
lが偽であればTrue、そうでなければFalseを返す
clのm番目をlにする
aが0より大きい間
x,yを引数とする関数euler011_lower_left_pointの定義
lを引数とする関数euler010_list_sumの定義
0から20未満の整数を順にiとして
pとnを引数とする関数euler005_expmax_aの定義
nを引数とする関数euler005_enum_prime_aの定義
nを引数とする関数euler004_half_digitの定義
judgeを返す
retの末尾にsを追加する
nを引数とする関数euler009_n_squareの定義
pの(nのp乗根の整数部分)乗を返す
bに空リストを代入
もしchが半角スペースなら
lのs+i番目の要素をretに追加する
aとbを引数とする関数euler007_is_lessの定義
nを引数とする関数euler017_digit_countを定義
以下の処理をl回繰り返す
resに0を代入
20の1/p乗未満の非負整数を順にiとして
fibsの末尾要素とその次の要素を足してfibsの末尾に追加
n未満の非負整数を小さい方から順にxとして
retをlの最初の要素と末尾の要素からなるリストとする
chをaの各要素、iをその番号として
2からnまでの数を順にiとして
resを1とする
sep未満の非負整数を順にkとして
aとbを引数とする関数euler006_sum_a_to_b_aの定義
fcにflのx番目の要素を掛ける
上記のいずれでもなければ
bがa以下であればTrue、そうでなければFalseを返す
もしjが16以下であれば
dinominalsの最初の要素を返す
x-1とy+1の組を返す
関数euler010の定義
x,yを引数とする関数euler011_lower_right_pointの定義
retに1を代入
dに365を代入
lにyを追加する
aが1であればTrue、そうでなければFalseを返す
aに1を足す
nが2で割り切れるならnを2で割った商を、そうでないならnの3倍に1を足した数を返す
ansに0を代入
aにsの長さを代入
p内の各要素を順にxとして
slの末尾にbufを追加
aとnを引数とする関数euler007_n_difisionの定義
nがiで割り切れる間
retにiを追加
もしsが1以下であれば
primesにiを追加する
nを10で割った整数部分が0でない間繰り返し
aを引数とする関数euler007_is_primeの定義
judgeをFalseにする
aにbを、bにaをbで割った余りを代入
qに空リストを代入
countを0とする
pのi番目をFalseにする
もしiが16以下であれば
mを1とする
lとaを引数とする関数euler008_list_addの定義
gridに文字列を空白文字で分割したリストを代入
現在のmと(q[i*20+j] * q[(i+1)*20+j] * q[(i+2)*20+j] * q[(i+3)*20+j])のうち大きい方を新しいmとする
qに空のリストを代入
retにiを追加する
20未満の非負整数jを小さい方から順に調べる
iの自乗からnまでのi個飛ばしの整数をjとして
nを引数とする関数euler017_digit_separateの定義
lを返す
aを引数とする関数euler007_succの定義
1901以上2001未満の整数を順にyとして
flに空リストを代入
nを引数とする関数euler012_nth_triangular_numberを定義
aとbとcを引数とする関数euler009_is_pythagorasの定義
100未満の非負整数を小さい方から順にiとして
sの長さを返す
aがb以下であればTrue、そうでなければFalseを返す
Nに10の6乗を代入
sからd個飛ばしでn個の整数をiとして
hにd、26(m+1)/10の整数部分、yyを100で割った余り、y%100/4の整数部分、gammaを足した結果を代入
sを引数とする関数euler004_string_reverseの定義
x+1とy-1の組を返す
2からaの平方根までの整数を順にiとして
nとrを引数とする関数euler015_combinationの定義
n未満の非負整数nを小さい方から順に
x-1とyの組を返す
judgeにTrueを代入
plを返す
nを引数とする関数euler017_ones_to_stringを定義
aを2で割った商とsを2で割った余りの和を返す
関数euler018の定義
sとrsが等しければTrue、そうでなければFalseを返す
factsに1がn+1個繋がったリストを格納
aをtnにする
もしiが10未満であれば
lを引数とする関数euler012_is_list_empty_aを定義
5未満の非負整数iについて
slを空リストとする
iに2を代入
sとnを引数とする関数euler004_n_bsliceの定義
bが0でない間
n-2未満の非負整数iを小さい方から順に調べる
nを引数とする関数euler005_enum_prime_bの定義
retに空のリストを代入
sがeより小さい間繰り返し
aとnを引数とする関数euler003_n_morethan_squareの定義
cが500未満である間
もしprimesのi番目がTrueであれば
retにtowordのa/10番目の要素の長さを足す
slに空リストを代入
2からnの平方根までの整数をiとして
xが2でわりきれるなら
pl内の各要素をiとして
lの長さが0であればTrue、そうでなければFalseを返す
tmpをaのみからなるリストとする
aがiで割り切れるなら
l内の全ての要素xについて
aとbを引数とする関数euler004_is_equalの定義
pを返す
primeを返す
そうでなくて、もしaが0であれば
nを引数とする関数euler006_n_sequenceの定義
sにaを足す
99より大きく999以下の整数を大きい方から順にjとして
もしnが2より小さければ
aがxで割り切れる間
"hundredand"の文字数をretに足す
sを引数とする関数euler017_string_length_aを定義
bにsの後ろからk番目の要素を足す
nとaを引数とする関数euler003_n_divide_aの定義
qをnの文字列表現とする
pの末尾にiを追加する
aの自乗がnより小さければTrue、そうでなければFalseを返す
nを引数とする関数euler011_zero_to_n_listの定義
retに"onethousand"の文字数を足す
primesのj番目をFalseにする
s,e,dを引数とする関数euler010_n_multiple_listの定義
retにsのi番目の要素を足す
aにpを掛ける
grid中の各要素を順にchとして
dlにiを追加
ループを抜ける
2からxの平方根までの数を順にjとして
tにsとs+1を2で割った商の組を代入
もしiがn未満であれば
nが2で割り切れるならnを2で割った商を、そうでないならnの3倍に1を足した数を新しいnとする
i以上1000未満の整数jについて
factに1を代入
fibに1と2からなるリストを代入
もしpのx番目が真であれば
resにaを足す
x,yを引数とする関数euler011_upward_pointの定義
lの各要素を順にxとして
ループから抜ける
aから1を引く
t内の各要素をxとして
tnを返す
pに1を足す
関数euler002の定義
nを10で割る
aを引数とする関数euler007_is_equale_zeroの定義
cをfcにする
関数euler006の定義
retを空とする
sに1を足す
flに1が4個と0が96個繋がったリストを代入
lにclのn番目の要素を代入
ループが正常に終了した場合
retがtn以下の間繰り返し
cに1を代入
retをnを10で割った余りのみからなるリストとする
aに1を足した数を返す
bufにchを加える
x+1とyの組を返す
aとbを引数とする関数euler012_is_coprimeの定義
slにsのi番目の要素の表す整数を追加
nとaを引数とする関数euler012_count_divisionの定義
sdに1を足す
2から20未満の整数を順にiとして
n未満の非負整数xを小さい方から順に
dayをdaysの各要素、iをその番号として
aとbを引数とする関数euler-17_divid_inateger_partを定義
2からN未満の各数を順にnとして
nに600851475143を代入
現在のmと(q[i*20+j] * q[i*20+j+1] * q[i*20+j+2] * q[i*20+j+3])のうち大きい方を新しいmとする
20未満の非負整数を小さい方から順にiとして
iとjとkの積を返す
1以上1000未満の整数iについて
aとbを引数とする関数euler008_elem_maxの定義
retにnを足す
retにxを掛ける
sが1000ならばTrue、そうでなければFalseを返す
aとbを引数とする関数euler016_a_exp_b_aの定義
そうでなくて、もしnが2であれば
fibsの末尾要素を返す
tnに1からsの総和を代入
factsを1がn+1個並んだリストとする
yが400で割り切れるか、100で割り切れずに4で割り切れ、さらにiが1である場合、
aとbを引数とする関数euler011_less_or_equal_aの定義
もしnが0より大きく、かつ2以下であるなら
retにsのみからなるリストを代入
lを引数とする関数euler012_is_list_emptyを定義
関数euler019の定義
aがiで割り切れる間
x,yを引数とする関数euler011_upper_right_pointの定義
aとbを引数とする関数euler008_elem_max_aの定義
sにnの文字列表現を代入
1からnまでの整数の総和を返す
fibsを返す
関数euler009の定義
flのx番目の要素をncにする
もしnが1と等しければ
cがbより小さい間
resが0以下であればTrue、そうでなければFalseを返す
sとeを引数とする関数euler012_range_prime_enumerateの定義
もしxがiで割り切れるなら
dlを空リストとする
5からsの要素数未満の整数iについて
mにiを掛ける
bufを空文字列にする
jを1にする
もしaがiで割り切れれば
ncにjを掛ける
retから3を引く
ncに1を代入
nを引数とする関数euler005_enum_primeの定義
0から20未満の整数を順にjとして
lを引数とする関数euler009_all_productの定義
aを1とする
nを引数とする関数euler012_prime_factorizeの定義
pにiの自乗とjの自乗の和を代入
1から1001未満の数を順にnとして
2からiの平方根までの数を順にjとして
nを引数とする関数euler011_zero_to_n_list_aの定義
factにi+1を掛ける
もしlが空なら
retにsの後ろからi番目の要素を足す
sにqのi番目を足す
aの自乗とbの自乗がcの自乗と等しければTrue、そうでなければFalseを返す
関数euler008の定義
euler015_pascal_triangleにn-1を渡した結果をlとする
qの末尾ににchの表す整数を追加
99より大きく999以下の整数を大きい方から順にiとして
dinominalsのj番目にj+1番目の要素を足す
xを2から2000000の0.5乗までの間で変化させて繰り返し
aとbを引数とする関数euler011_less_or_equalの定義
s内の全ての要素を順にchとして
prime内の各要素をjとして
aが0であればTrue、そうでなければFalseを返す
lを引数とする関数euler014_list_enumを定義
pとnを引数とする関数euler005_expmaxの定義
towordのn/10番目の要素の長さをretに足す
Trueを返す
retに0を代入する
cに1を足す
factsを返す
aをbで割った整数部分を返す
sからeまでの数を順にiとして
primeに空のリストを代入
aからnを引く
plに空リストを代入
もしjが4以上でiが16以下であれば
lに空リストを代入
lを引数とする関数euler014_list_reverseを定義
mに0を代入
sdを返す
pを1とする
関数euler001の定義
nを引数とする関数euler009_n_square_aの定義
aがbより小さければTrue、そうでなければFalseを返す
mを返す
retの末尾にaを追加
aのb乗を返す
そうでなければ
aにpを掛ける
0のみからなるリストを返す
tri[i+1][j]とtri[i+1][j+1]の大きい方をtri[i][j]に足す
そうでなくて、もしnの文字列表現の長さが3であれば
nが2で割り切れる場合True、そうでなければFalseを返す
bufに空文字列を代入
retにcを足す
もしyが1582以上であれば
nを10で割った整数部分を新しいnとする
iに1を足す
c未満の非負整数iについて
x,yを引数とする関数euler011_downward_pointの定義
aとbを引数とする関数euler016_a_exp_bの定義
nを引数とする関数euler014_collatz_calcを定義
fibの末尾要素が4000000未満の間繰り返し
retにwordのa番目の要素の長さを足す
pにTrueのみからなるリストを代入
aをiで割る
fibの各要素を前から順にxとして
aにqの要素の総和の文字列表現を代入
nを引数とする関数euler002_divide_2の定義
aがnより小さい間
fにTrueを代入
nを10で割った整数部分が0より大きい間
もしmが2以下であれば
sにxを足す
lに0を(x-flの長さ+1)回繰り返したリストを代入
bの要素を末尾から順にmとして繰り返し
lの末尾要素から順にiとして
x,yを引数とする関数euler011_left_pointの定義
aとbを引数とする関数euler017_is_equalの定義
xとcの組をflに追加する
primeにiを追加する
lを引数とする関数euler002_sum_listの定義
fibsに0と1からなるリストを代入
explを引数とする関数euler012_count_divisorを定義
aとbの和を返す
もしprimesのi番目が真であれば
sにchの表す整数を足す
retに1を足す
fがTrueであれば
sumofsqに0を代入
gammaに0を代入
factsのi+1番目にfactsのi番目とi+1の積を代入
pのx番目が真であれば
plにiが含まれていなければ
mとaの大きい方を新しいmとする
lとaを引数とする関数euler008_list_add_aの定義
sとeを引数とする関数euler014_make_range_listを定義
aとbの大きい方を返す
plを空のリストとする
factsを21個の1からなるリストとする
関数euler013の定義
iを2以上nの平方根以下の間で繰り返し
ループが終了したら
explの各要素をxとして
lの末尾にtmpを結合する
clの2番目の要素を0とする
sとdとnを引数とする関数euler006_make_common_diff_sequenceの定義
関数euler014の定義
mに12を足す
tpの各要素の総和が1000と等しければTrue、そうでなければFalseを返す
lに1を足す
関数euler005の定義
ansを返す
lとnを引数とする関数euler014_list_initを定義
retに空リストを代入
factsのx+1番目の要素にx番目の要素とx+1積を代入する
triの長さ-1未満の非負整数を大きい方からiとして
retにchを追加
iを2以上n未満の間で増加させながら繰り返し
関数euler020の定義
sとdとnを引数とする関数euler006_make_common_dif_sequence_aの定義
retに空文字列を代入
gammaにy/100の整数部分の-2倍とy/100の整数部分を4で割った整数部分の和を代入
primesを返す
resが0以上であればTrue、そうでなければFalseを返す
もしflのx番目が偽であれば
nを引数とする関数euler016_n_separate_digitの定義
triの先頭要素の先頭要素を返す
aを返す
retの要素の総和を返す
cを0とする
現在のmと(q[i*20+j] * q[(i+1)*20+j-1] * q[(i+2)*20+j-2] * q[(i+3)*20+j-3])のうち大きい方を新しいmとする
fをFalseにする
tpの各要素をxとして
sを2にする
もしmがN未満なら
nを引数とする関数euler016_all_digit_sumの定義
sepにsの長さを2で割った商とsを2で割った余りの和を代入
もしdを7で割った余りが6であれば
aとbを引数とする関数euler004_multipleを定義
2からnの平方根までの数を順にiとして
retにiとlのi番目からなる組を追加する
retの末尾にchの表す整数を追加
aとbを引数とする関数euler006_sum_a_to_bの定義
nameのh番目を返す
lを引数とする関数euler002_sum_list_aの定義
iを2から2000000まで変化させて繰り返し
rsに空文字列を代入
x,yを引数とする関数euler011_upper_left_pointの定義
primesをTrueがn+1個繋がったリストとする
qの各要素を前から順にxとして
qに2の1000乗の文字列表現を格納
xとy+1の組を返す
sを引数とする関数euler017_string_lengthの定義
fcに1を代入
もしsが2で割り切れるなら
nを整数にした結果を返す
iをxの2倍からpの長さ未満までxごとに変化させて繰り返し
sを返す
以下の処理をn-1回繰り返す
Falseを返す
aにnから2を引いた数を代入
cに0を代入
x+1とy+1の組を返す
もしmがnより小さい場合
もしprimesのi番目が真なら
yを引数とする関数euler019_is_leap_yearを定義
もしaが2未満であれば
0からn-1までを順に要素として持つリストを返す
retを1とする
もしiがjで割り切れるなら
fibの末尾要素とその次の要素を足してfibの末尾に追加する
Trueがn個並んでいるリストをpに代入
xを2からnの平方根の範囲で変化させて繰り返し
sl内の各要素をjとして
sにjとiの積の文字列表現を代入
nを引数とする関数euler015_all_factorialsの定義
resにaを掛ける
aにnを100で割った余りを代入
sqofsumに101と50の積を代入
21未満の非負整数を小さい方から順にiとして
もしaとbが等しければ
retにchを足す
aがbより小さい間
x-1とy-1の組を返す
関数euler015の定義
aに1を代入
以下の処理をn回繰り返す
primeの各要素をpとして
nを引数とする関数euler015_pascal_triangleの定義
nを引数とする関数euler002_n_fibonacci_sequenceの定義
関数euler003の定義
nを引数とする関数euler014_collatz_problem_countを定義
qの末尾にchの表す数値を追加
そうでなくて、もしnの文字列表現の長さが2であれば
nがN以上かclのn番目が-1である間
sの各要素を後ろから順にchとして
関数euler007の定義
bがaより小さければTrue、そうでなければFalseを返す
sに1を代入
nを引数とする関数euler020_digit_sumの定義
aがn未満の間
aにjを掛ける
retに0を代入
aにsのk番目の要素を足す
引数nを取る関数euler010_enum_primeの定義
tnを引数とする関数euler012_next_triangular_numberを定義
flにlを代入
nを引数とする関数euler002_n_fibonacci_numberの定義
aとbが等しければTrue、そうでなければFalseを返す
yから1を引く
qの各要素を順にxとして
retの末尾にiを追加する
cを返す
fibsのn-1番目の要素を返す
primeの各要素をyとして
clにN個の-1を要素とするリストを代入
2からiの平方根までの整数をjとして
nを引数とする関数euler006_n_square_aの定義
qにnの文字列表現を代入
dに1を足す
primeに空リストを代入
aとbを引数とする関数euler011_ver_or_equal_aの定義
slを返す
aをnとする
nを引数とする関数euler020_factorialの定義
bがaより大きければb、そうでなければaを返す
nをiで割る
aを引数とする関数euler007_is_prime_aの定義
dにdayを足す
sにxの表す整数を足す
いずれでもなければ
iをxの2倍からpの長さまでx単位で変化させて繰り返し
sに0を代入
もしiがtnの半分よりも大きければ
retをiにする
l内の全要素aについて
xとy-1の組を返す
sを引数とする関数euler004_is_palindromicの定義
triのi番目の長さ未満の非負整数を小さい方からjとして
