2m 11s (- 52m 43s) (100 4%) 3.8201
2m 17s (- 26m 19s) (200 8%) 3.2644
2m 22s (- 17m 25s) (300 12%) 3.1352
2m 27s (- 12m 55s) (400 16%) 2.9069
2m 32s (- 10m 11s) (500 20%) 2.8051
2m 37s (- 8m 18s) (600 24%) 2.5467
2m 43s (- 7m 0s) (700 28%) 2.8661
2m 48s (- 5m 59s) (800 32%) 2.6131
2m 54s (- 5m 10s) (900 36%) 2.4939
3m 0s (- 4m 30s) (1000 40%) 2.4715
3m 5s (- 3m 56s) (1100 44%) 2.5329
3m 11s (- 3m 27s) (1200 48%) 2.2738
3m 16s (- 3m 1s) (1300 52%) 2.3959
3m 21s (- 2m 38s) (1400 56%) 2.3802
3m 26s (- 2m 17s) (1500 60%) 2.2359
3m 32s (- 1m 59s) (1600 64%) 2.6284
3m 38s (- 1m 42s) (1700 68%) 2.4314
3m 44s (- 1m 27s) (1800 72%) 2.3626
3m 49s (- 1m 12s) (1900 76%) 2.4237
3m 55s (- 0m 58s) (2000 80%) 2.2839
4m 0s (- 0m 45s) (2100 84%) 2.1239
4m 5s (- 0m 33s) (2200 88%) 2.1067
4m 10s (- 0m 21s) (2300 92%) 2.1410
4m 15s (- 0m 10s) (2400 96%) 2.2757
4m 20s (- 0m 0s) (2500 100%) 2.1404
翻訳中……
1/14
> 1 から 6 未 満 までの 数 列 を 順に A として 、 繰り返す
<  for A in range ( B , C ) )  <EOS>
2/14
> A 、 B 、 C を出力する
<  print ( A ( A , B ) )  <EOS>
3/14
> A の 2 番 目 を 2 だけ 減少 させる
<  A += B [ B ] [ C ] [ B ] [ C ] ]  <EOS>
4/14
> A が 1 と 等 しい 間 、 次 を 繰り返す
<  while A . A ( B ( B ) :  <EOS>
5/14
> A が B に C を加えた 値 以下の とき 、
<  if A ( B , C ) :  <EOS>
6/14
> A を 5 で 割 った 商 を A とする
<  A = B ( B ( C , C )  <EOS>
7/14
> 入力された 文字列を ネ イ ピ ア 数 とする
<  A = B ( B ( C , C ) )  <EOS>
8/14
> A が 8 より 小さい とき 、
<  if A ( B , C ) :  <EOS>
9/14
> A を B の 1 番 目 だけ 増加 させる
<  A += B [ B ] [ C ] [ B ] [ C ] ]  <EOS>
10/14
> 0 から 17 未 満 までの 数 列 を 順に A として 、 繰り返す
<  for A in range ( B , C ) :  <EOS>
11/14
> 3 60 から A を 引 いた 値を返す
<  return ( A , B , C )  <EOS>
12/14
> A の q の 末 尾 に B を追加する
<  A . append ( B ( B , C ) )  <EOS>
13/14
> C の先頭 を取り 出した 値を A の B 番 目 にする
<  A . B = [ B ] = B [ B ] ]  <EOS>
14/14
> A の 末 尾 に 偽 を追加する
<  A . append ( ( B , C ) )  <EOS>